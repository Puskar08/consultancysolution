<style>
    .step-nav {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
    }

    .step-nav .step-button {
        flex: 1;
        margin: 0 5px;
        background-color: #e9ecef;
        border: none;
        padding: 12px;
        font-weight: bold;
        cursor: pointer;
        text-align: center;
    }

    .step-nav .step-button.active {
        background-color: #007bff;
        color: white;
        using Microsoft.EntityFrameworkCore.Metadata.Internal;
    }

    .step-nav .step-button.disabled {
        background-color: #ccc;
        color: #666;
        cursor: not-allowed;
    }
</style>
@{
    string mode = ViewData["Mode"]?.ToString() ?? "View";
    int studentId = (int)(ViewData["StudentId"] ?? 0);
    var tabDisabledAttribute = studentId > 0 ? "" : "disabled";
}
<div class="page">
    <div class="page-body">
        <input type="hidden" id="StudentID" value="@studentId" />
        <input type="hidden" id="mode" value="@mode" />
        <div class="container mt-4">
            <!--Nav Tabs-->
            <div class="step-nav" id="studentTabs"">
                <button class=" step-button active" data-tab="basic-info">Basic Info</button>
                <button class="step-button" data-tab="course-selection" @tabDisabledAttribute>Course Selection</button>
                <button class="step-button" data-tab="account" @tabDisabledAttribute>Account</button>
            </div>
            <!--Tab Content-->
            <div id="tab-content" class="mt-4">
                <!--content for the active tab-->
            </div>

        </div>
    </div>
</div>

<script>
    function previewImage(event) {
        debugger;
        console.log('previewImage called'); // Confirm function is called
        const input = event.target;
        const preview = document.getElementById('photoPreview');
        const placeholder = document.getElementById('photoPreviewContainer').querySelector('.profile-photo-placeholder');

        if (!input || !preview || !placeholder) {
            console.error('Missing DOM elements:', { input: !!input, preview: !!preview, placeholder: !!placeholder });
            return;
        }

        if (input.files && input.files[0]) {
            const file = input.files[0];
            if (!file.type.startsWith('image/')) {
                console.error('Selected file is not an image:', file.type);
                return;
            }

            const reader = new FileReader();
            reader.onload = function (e) {
                if (e.target.result) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                    placeholder.style.display = 'none';
                    console.log('Image preview updated successfully');
                } else {
                    console.error('FileReader failed to load image');
                }
            };
            reader.onerror = function (e) {
                console.error('FileReader error:', e);
            };
            reader.readAsDataURL(file);
        } else {
            console.error('No file selected');
        }
    }
    $(document).ready(function () {

        var mode = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(mode));
        $('.closeBtn').on('click', function () {
            // Redirect to the Index page
            window.location.href = '/Students/Index'; // Replace with the correct URL for your Index page
        });

        //load the first tab content
        loadTabContent('basic-info', mode);
        //handle tab button click
        $('.step-nav').on('click', '.step-button', function () {
            if ($(this).hasClass('disabled')) return;//ignore disabeld tabs
            //activate the clicked tab
            $('.step-button').removeClass('active');
            $(this).addClass('active');
            //load the corresponding tab content
            const tab = $(this).data('tab');
            loadTabContent(tab, mode);
        })

        //function to load tab content dynamically
        function loadTabContent(tab, pageMode) {
            $.ajax({
                url: `/Students/GetTabContent?tab=${tab}&pageMode=${pageMode}&studentId=${$('#StudentID').val()}`,
                type: 'GET',
                success: function (response) {
                    if (response.success) {
                        $('#tab-content').html(response.html);
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message || 'Failed to load tab content.'
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to load tab content.'
                    });
                }
            });
        }
    })
</script>