@model List<consultancysolution.Models.CoursePaymentDto>
@{
    var disableCoursePaymentFormAttr = (ViewBag.CoursePaymentFormMode == "Add") ? "" : "disabled";
}
<div class="CoursePaymentInfo">
    <h5>Course Payments</h5>
    <table id="coursePaymentTable">
        <thead>
            <tr>
                <th>Course</th>
                <th>Cost</th>
                <th>Paid</th>
                <th>Due</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var coursePayment in Model)
            {
                <tr data-course-id="@coursePayment.CourseId">
                    <td>@coursePayment.CourseName</td>
                    <td>@coursePayment.Price</td>
                    <td><input type="number" class="form-control paidAmount" value="@coursePayment.PaidAmount"
                            @disableCoursePaymentFormAttr /></td>
                    <td class="dueAmount">@coursePayment.DueAmount</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="col-sm-12 d-flex justify-content-end gap-2">

        @{
            if (ViewBag.CoursePaymentFormMode == "Edit")
            {
                <button id="editCoursePayments" class="btn btn-warning">Edit</button>
                <button id="updateCoursePayments" class="btn btn-success" style="display: none;">Update</button>
                <button id="cancelCoursePayments" class="btn btn-secondary" style="display: none;">Cancel</button>
            }
            else
            {
                <button id="saveCoursePayments" class="btn btn-primary">Save Course Payments</button>
            }
        }
        <button type="button" class="closeBtn btn btn-secondary"
            onclick="window.location.href='/Students/Index';">Close</button>
    </div>
</div>
<script>
    function updateCoursePaymentDue() {
        $("#coursePaymentTable tbody tr").each(function () {
            const row = $(this);
            const price = parseFloat(row.find("td:nth-child(2)").text()) || 0;
            const paid = parseFloat(row.find(".paidAmount").val()) || 0;
            const due = Math.max(0, price - paid);
            row.find(".dueAmount").text(due.toFixed(2));
        });
    }
    $("#coursePaymentTable").on("input", ".paidAmount", function () {
        updateCoursePaymentDue();
    });
    //updateCoursePaymentDue(); // Initialize due amounts

</script>