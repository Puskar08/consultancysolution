@model consultancysolution.Models.Students
<style>
    #coursesTable tbody tr {
        background-color: #f9f9f9;
        /* Light gray background for rows */
    }

    #coursesTable tbody tr:hover {
        background-color: #e9ecef;
        /* Slightly darker gray on hover */
    }

    #coursesTable thead {
        background-color: #343a40;
        /* Dark background for the header */
        color: white;
        /* White text for the header */
    }

    #coursesTable td {
        vertical-align: middle;
        /* Align text vertically in the middle */
    }

    #coursesTable .removeCourseButton {
        background-color: #dc3545;
        /* Red background for remove button */
        color: white;
        /* White text for remove button */
    }

    #coursesTable .removeCourseButton:hover {
        background-color: #c82333;
        /* Darker red on hover */
    }
</style>
<div class="container mt-4">
    <h1 class="text-center">Add New Student</h1>
    <form asp-action="Create" method="post">
        <div class="row mb-3">
            <div class="col-md-6">
                <label asp-for="Name" class="form-label">Name</label>
                <input asp-for="Name" class="form-control" />
            </div>
            <div class="col-md-6">
                <label asp-for="Email" class="form-label">Email</label>
                <input asp-for="Email" class="form-control" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label asp-for="Phone" class="form-label">Phone</label>
                <input asp-for="Phone" class="form-control" />
            </div>
            <div class="col-md-6">
                <label asp-for="Address" class="form-label">Address</label>
                <input asp-for="Address" class="form-control" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label asp-for="DateOfBirth" class="form-label">Date of Birth</label>
                <input asp-for="DateOfBirth" class="form-control" type="date" />
            </div>
            <div class="col-md-6">
                <label asp-for="AdmissionDate" class="form-label">Admission Date</label>
                <input asp-for="AdmissionDate" class="form-control" type="date" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label asp-for="AdmissionCost" class="form-label">Admission Cost</label>
                <input asp-for="AdmissionCost" class="form-control" type="number" id="admissionCost" value="0" />
            </div>
            <!-- Add Courses Section -->
            <div class="col-md-6">
                <label class="form-label">Course</label>
                <select asp-for="StudentCourses" id="courseDropdown" class="form-control" name="SelectedCourses"
                    data-live-search="true">
                    <option value="">Select Course</option>
                    @if (ViewBag.Courses is List<consultancysolution.Models.Course> courses)
                    {
                        foreach (var course in courses)
                        {
                            <option value="@course.Id" data-name="@course.Name" data-price="@course.Price">
                                @course.Name (@course.Price)
                            </option>
                        }
                    }
                </select>
            </div>
        </div>

        <!-- Courses Table -->
        <div class="row mb-3">
            <div class="col-md-12">
                <h4 class="text-primary" style="background-color: darkgrey; width:">Selected Courses</h4>
                <table class="table table-bordered table-hover table-striped" id="coursesTable">
                    <thead class="table-dark">
                        <tr>
                            <th>Course Name</th>
                            <th>Course Fee</th>
                            <th>Enrollment Fee</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Rows will be dynamically added here -->
                    </tbody>
                </table>
                <div id="selectedCoursesContainer"></div>
            </div>
        </div>
        <!-- Calculation Area -->
        <div class="row mb-3">
            <div class="col-md-12">
                <h5>Calculation</h5>
                <p><strong>Selected Courses Cost:</strong> $<span id="coursesCost">0</span></p>
                <p><strong>Admission Cost:</strong> $<span id="admissionCostDisplay">0</span></p>
                <p><strong>Total Cost:</strong> $<span id="totalCost">0</span></p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 text-end">
                <button type="submit" class="btn btn-primary">Save</button>
                <a asp-action="Index" class="btn btn-secondary">Cancel</a>
            </div>
        </div>
    </form>
</div>
<script>
    $(document).ready(function () {
        $('#courseDropdown').select2();

        let totalCourseFees = 0;

        // Handle course selection
        $('#courseDropdown').on('change', function () {
            const selectedCourses = $('#courseDropdown option:selected');

            // Clear the table
            $('#coursesTable tbody').empty();
            $('#selectedCoursesContainer').empty();

            // Recalculate total fees
            totalCourseFees = 0;

            // Add selected courses to the table
            selectedCourses.each(function () {
                const courseId = $(this).val();
                const courseName = $(this).data('name');
                const coursePrice = parseFloat($(this).data('price')) || 0;

                // Add the course to the table
                const row = `
                    <tr data-course-id="${courseId}">
                        <td>${courseName}</td>
                        <td>$${coursePrice.toFixed(2)}</td>
                        <td>
                            <input type="number" class="form-control enrollmentFee" value="${coursePrice.toFixed(2)}" />
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm removeCourseButton">Remove</button>
                        </td>
                    </tr>
                `;
                $('#coursesTable tbody').append(row);
                //add hidden input for the course
                const hiddenInput = `
                    <input type = "hidden" name = "SelectedCourses[${courseId}].CourseId" value = "${courseId}" />
                    <input type="hidden" name="SelectedCourses[${courseId}].ModifiedCoursePrice" class="hiddenEnrollmentFee" value="${coursePrice.toFixed(2)}" />
                `;
                $('#selectedCoursesContainer').append(hiddenInput);
                // Update total course fees
                totalCourseFees += coursePrice;
            });

            updateCalculations();
        });

        // Remove course from the table when the "Remove" button is clicked
        $(document).on('click', '.removeCourseButton', function () {
            const row = $(this).closest('tr');
            const courseId = row.data('course-id');

            // Remove the course from the dropdown selection
            $(`#courseDropdown option[value="${courseId}"]`).prop('selected', false);

            // Remove the row from the table
            row.remove();
            //remove the corresponding hidden input
            $('#selectedCoursesContainer input[name="SelectedCourses[' + courseId + '].CourseId"]').remove();
            $('#selectedCoursesContainer input[name="SelectedCourses[' + courseId + '].ModifiedCoursePrice"]').remove();

            // Trigger the change event to recalculate
            $('#courseDropdown').trigger('change');
        });

        // Update calculations when enrollment fees change
        $(document).on('input', '.enrollmentFee', function () {
            const row = $(this).closest('tr');
            const courseId = row.data('course-id');
            const enrollmentFee = parseFloat($(this).val()) || 0;
            //update the corresponding hidden input
            $('#selectedCoursesContainer input[name="SelectedCourses[' + courseId + '].ModifiedCoursePrice"]').val(enrollmentFee.toFixed(2));
            // Update the total course fees
            updateCalculations();
        });

        // Update calculations
        function updateCalculations() {
            debugger;
            let totalEnrollmentFees = 0;

            $('.enrollmentFee').each(function () {
                totalEnrollmentFees += parseFloat($(this).val()) || 0;
            });

            const admissionCost = parseFloat($('#admissionCost').val()) || 0;

            $('#coursesCost').text(totalEnrollmentFees.toFixed(2));
            $('#admissionCostDisplay').text(admissionCost.toFixed(2));
            $('#totalCost').text((totalEnrollmentFees + admissionCost).toFixed(2));
        }

        // Update calculations when admission cost changes
        $('#admissionCost').on('input', function () {
            updateCalculations();
        });
    });
</script>
