@model Students
@{
    var disableAttr = (ViewBag.BasicInfoMode == "Add") ? "" : "disabled";
}
<style>
    .form-group {
        margin-bottom: 1rem;
    }

    .col-form-label {
        text-align: left;
        cursor: pointer;
    }
</style>
<div id="basic-info" class="tab-pane active">
    <form id="studentForm" class="form-horizontal" method="post">
        <input type="hidden" id="StudentId" name="StudentId" value="@Model.Id">
        <div class="form-group row">
            <label for="Name" class="col-sm-2 col-form-label">Name</label>
            <div class="col-sm-4">
                <input type="text" id="Name" class="form-control" name="Name" value="@Model.Name" required
                    @disableAttr />
            </div>

            <label for="Email" class="col-sm-2 col-form-label">Email</label>
            <div class="col-sm-4">
                <input type="email" id="Email" class="form-control" name="Email" value="@Model.Email" required
                    @disableAttr />
            </div>
        </div>

        <div class="form-group row">
            <label for="Phone" class="col-sm-2 col-form-label">Phone</label>
            <div class="col-sm-4">
                <input type="text" id="Phone" class="form-control" name="Phone" value="@Model.Phone" required
                    @disableAttr>
            </div>

            <label for="Address" class="col-sm-2 col-form-label">Address</label>
            <div class="col-sm-4">
                <input type="text" id="Address" class="form-control" name="Address" value="@Model.Address" @disableAttr>
            </div>
        </div>

        <div class="form-group row">
            <label for="DateofBirth" class="col-sm-2 col-form-label">Date of Birth</label>
            <div class="col-sm-4">
                <input type="date" id="DateofBirth" class="form-control" name="DateOfBirth"
                    value="@Model.DateOfBirth.ToString("yyyy-MM-dd")" required @disableAttr>
            </div>

            <label for="AdmissionDate" class="col-sm-2 col-form-label">Admission Date</label>
            <div class="col-sm-4">
                <input type="date" class="form-control" id="AdmissionDate" name="AdmissionDate"
                    value="@Model.AdmissionDate.ToString("yyyy-MM-dd")" required @disableAttr>
            </div>
        </div>

        <div class="col-sm-12 d-flex justify-content-end gap-2">
            @{
                if (ViewBag.BasicInfoMode == "Add")
                {
                    <button type="submit" class="btn btn-primary" data-buttonType="add">Save</button>
                }
                else if (ViewBag.BasicInfoMode == "Edit")
                {
                    <button type="button" id="editBasicInfo" class="btn btn-warning">Edit</button>
                    <button type="submit" id="updateBasicInfo" class="btn btn-success" data-buttonType="edit"
                        style="display:none;">Update</button>
                    <button type="button" id="cancelBasicInfo" class="btn btn-secondary" style="display:none;">Cancel</button>
                }
                <button type="button" class="closeBtn btn btn-secondary" onclick="window.location.href='/Students/Index';"
                    style="">Close</button>
            }
        </div>
    </form>
</div>
<script>
    $(document).ready(function () {
        debugger;
        let clickedButtonType = null;
        let mode = $('#mode').val();

        $('#editBasicInfo').on('click', function () {
            debugger;
            $('#studentForm input').prop('disabled', false);
            $('#updateBasicInfo, #cancelBasicInfo').show();
            $('.closeBtn').hide();
            $(this).hide();
        })
        $('#cancelBasicInfo').on('click', function () {
            debugger;
            $('[data-tab="basic-info"]').click();
        });
        $('#studentForm button[type="submit"]').on('click', function (e) {
            debugger;
            clickedButtonType = this.dataset.buttontype;
        })

        $('#studentForm').on('submit', function (e) {
            debugger;
            e.preventDefault();
            let stringUrl = clickedButtonType == "add" ? '/Students/CreateStudentOnly' : '/Students/ModifyStudent';
            const formData = $(this).serialize();
            $.ajax({
                url: stringUrl,
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        debugger;
                        // Update the browser URL
                        history.replaceState(null, '', `/Students/Form?mode=${mode}&studentId=${response.studentId}`);
                        // Update hidden field
                        //$('#StudentId').val(response.studentId);//form element
                        $('#StudentID').val(response.studentId);//page element
                        $('#tab-content').html(response.html)
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'success',
                            title: 'Success!',
                            text: response.message || 'Basic info saved successfully, continue to course selection.',
                            showConfirmButton: false,
                            timer: 2000,
                            timerProgressBar: true
                        });

                        // Enable next tabs
                        if (clickedButtonType == "add" || clickedButtonType == "edit") {
                            $('[data-tab="course-selection"]').removeClass('disabled');
                            $('[data-tab="account"]').removeClass('disabled');
                            // Automatically navigate to the next tab
                            $('[data-tab="course-selection"]').click();
                        }
                    } else {
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 2000,
                            timerProgressBar: true,
                            icon: 'error',
                            title: 'Error!',
                            text: response.message || 'Failed to save basic info.',
                        });
                    }
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2000,
                        timerProgressBar: true,
                        icon: 'error',
                        title: 'Error!',
                        text: 'An error occurred while saving basic info.',
                    });
                }
            });
        })
    })
</script>